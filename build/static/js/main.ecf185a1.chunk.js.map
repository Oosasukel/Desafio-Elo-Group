{"version":3,"sources":["Contexts/authContext.tsx","Middlewares/RouteWrapper.tsx","pages/Leads.tsx","pages/Login.tsx","routes.tsx","App.tsx","index.tsx"],"names":["AuthContext","React","createContext","RouteWrapper","redirectTo","isPrivate","Component","component","rest","useContext","to","render","props","Leads","useState","id","text","state","leads","setLeads","nextId","setNextId","inputNewLeadRef","useRef","trNewLeadRef","allowDrop","event","preventDefault","drag","ev","dataTransfer","setData","target","drop","currentTarget","split","rowId","columnStage","leadIndex","Number","getData","lead","newLeads","className","src","alt","onClick","input","current","value","tr","style","display","focus","map","index","draggable","onDragStart","onDragOver","onDrop","ref","onKeyDown","key","blur","onBlur","leadText","newLead","addNewLead","type","Login","history","setToken","errors","setErrors","user","setUser","password","setPassword","passwordConfirm","setPasswordConfirm","onSubmit","newErrors","trim","push","test","length","htmlFor","onInput","placeholder","error","Routes","path","exact","App","token","authContext","Provider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecf185a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AuthContext = React.createContext<\r\n  [string, React.Dispatch<React.SetStateAction<string>>]\r\n>(['', () => {}]);\r\n\r\nexport default AuthContext;\r\n","import React, { useContext } from 'react';\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\r\nimport AuthContext from '../Contexts/authContext';\r\n\r\nfunction RouteWrapper({\r\n  redirectTo = '/login',\r\n  isPrivate = false,\r\n  component: Component,\r\n  ...rest\r\n}: {\r\n  redirectTo?: string;\r\n  isPrivate?: boolean;\r\n  component: React.FC<any>;\r\n} & RouteProps) {\r\n  const [token] = useContext(AuthContext);\r\n  const authenticated = token;\r\n\r\n  if (!authenticated && isPrivate) return <Redirect to={redirectTo} />;\r\n\r\n  return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n}\r\n\r\nexport default RouteWrapper;\r\n","import React, { useRef, useState } from 'react';\r\n\r\nimport '../styles/pages/leads.css';\r\n\r\ninterface Lead {\r\n  id: number;\r\n  text: string;\r\n  state: 1 | 2 | 3;\r\n}\r\n\r\nfunction Leads() {\r\n  const [leads, setLeads] = useState<Lead[]>([\r\n    {\r\n      id: 1,\r\n      text: 'Org. Internacionais',\r\n      state: 1,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Ind. Farm. LTDA',\r\n      state: 2,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Musc. Sound Live Cmp',\r\n      state: 1,\r\n    },\r\n  ]);\r\n  const [nextId, setNextId] = useState(4);\r\n  const inputNewLeadRef = useRef<HTMLInputElement>(null);\r\n  const trNewLeadRef = useRef<HTMLTableRowElement>(null);\r\n\r\n  const allowDrop = (event: React.DragEvent<HTMLTableDataCellElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const drag = (ev: any) => {\r\n    ev.dataTransfer.setData('lead', ev.target.id);\r\n  };\r\n\r\n  const drop = (event: React.DragEvent<HTMLTableDataCellElement>) => {\r\n    const tdId = event.currentTarget.id;\r\n    const [, rowId, columnStage] = tdId.split('_');\r\n    const leadIndex = Number(event.dataTransfer.getData('lead'));\r\n    const lead = leads[leadIndex];\r\n\r\n    if (Number(columnStage) === lead.state + 1 && lead.id === Number(rowId)) {\r\n      const newLeads = [...leads];\r\n      newLeads[leadIndex].state += 1;\r\n\r\n      setLeads(newLeads);\r\n    }\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleNewInput = () => {\r\n    const input = inputNewLeadRef.current;\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    const tr = trNewLeadRef.current;\r\n    if (tr) {\r\n      tr.style.display = 'table-row';\r\n    }\r\n\r\n    inputNewLeadRef.current?.focus();\r\n  };\r\n\r\n  const addNewLead = (leadText: string) => {\r\n    if (leadText) {\r\n      const newLead: Lead = {\r\n        id: nextId,\r\n        state: 1,\r\n        text: leadText,\r\n      };\r\n      setNextId(nextId + 1);\r\n\r\n      setLeads([...leads, newLead]);\r\n    }\r\n\r\n    const tr = trNewLeadRef.current;\r\n    if (tr) {\r\n      tr.style.display = 'none';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='leads'>\r\n      <div className='container'>\r\n        <div className='header'>\r\n          <div className='imageContainer'>\r\n            <img\r\n              src='https://elogroup.com.br/wp-content/uploads/2020/09/logo-EloGroup-branco.png'\r\n              alt='Elo Group'\r\n            />\r\n          </div>\r\n          <h1 className='title'>Painel de Leads</h1>\r\n        </div>\r\n        <button onClick={handleNewInput} className='newLead'>\r\n          Novo Lead (+)\r\n        </button>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td>Cliente em Potencial</td>\r\n              <td>Dados Confirmados</td>\r\n              <td>Reuni√£o Agendada</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {leads.map((lead, index) => {\r\n              return (\r\n                <tr key={lead.id}>\r\n                  <td id={`td_${lead.id}_1`}>\r\n                    {lead.state === 1 && (\r\n                      <span\r\n                        id={`${index}`}\r\n                        draggable\r\n                        className='tdContent'\r\n                        onDragStart={drag}\r\n                      >\r\n                        {lead.text}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td\r\n                    id={`td_${lead.id}_2`}\r\n                    onDragOver={allowDrop}\r\n                    onDrop={drop}\r\n                  >\r\n                    {lead.state === 2 && (\r\n                      <span\r\n                        id={`${index}`}\r\n                        draggable\r\n                        className='tdContent'\r\n                        onDragStart={drag}\r\n                      >\r\n                        {lead.text}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td\r\n                    id={`td_${lead.id}_3`}\r\n                    onDragOver={allowDrop}\r\n                    onDrop={drop}\r\n                  >\r\n                    {lead.state === 3 && (\r\n                      <span\r\n                        id={`${index}`}\r\n                        draggable\r\n                        className='tdContent'\r\n                        onDragStart={drag}\r\n                      >\r\n                        {lead.text}\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n            <tr style={{ display: 'none' }} ref={trNewLeadRef}>\r\n              <td>\r\n                <input\r\n                  onKeyDown={(event) => {\r\n                    if (event.key === 'Enter') {\r\n                      event.currentTarget.blur();\r\n                    }\r\n                  }}\r\n                  onBlur={(event) => {\r\n                    const value = event.target.value;\r\n\r\n                    addNewLead(value);\r\n                  }}\r\n                  ref={inputNewLeadRef}\r\n                  type='text'\r\n                />\r\n              </td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leads;\r\n","import React, { useContext, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport AuthContext from '../Contexts/authContext';\r\n\r\nimport '../styles/pages/login.css';\r\n\r\nconst Login: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const [, setToken] = useContext(AuthContext);\r\n  const [errors, setErrors] = useState<string[]>([]);\r\n  const [user, setUser] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n  function handleFormSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    const newErrors = [];\r\n\r\n    const letrasMaiusculas = /[A-Z]/;\r\n    const letrasMinusculas = /[a-z]/;\r\n    const numeros = /[0-9]/;\r\n    const caracteresEspeciais = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n\r\n    if (user.trim() === '') {\r\n      newErrors.push('Campo Usu√°rio √© obrigat√≥rio.');\r\n    }\r\n    if (password === '') {\r\n      newErrors.push('Campo Password √© obrigat√≥rio.');\r\n    } else {\r\n      if (password !== passwordConfirm) {\r\n        newErrors.push('Password e Confirma√ß√£o devem ser iguais.');\r\n      }\r\n      if (\r\n        !letrasMaiusculas.test(password) &&\r\n        !letrasMinusculas.test(password)\r\n      ) {\r\n        newErrors.push(\r\n          'Password deve possuir pelo menos um caracter alfanum√©rico.'\r\n        );\r\n      }\r\n      if (!caracteresEspeciais.test(password)) {\r\n        newErrors.push(\r\n          'Password deve possuir pelo menos um caracter especial.'\r\n        );\r\n      }\r\n      if (!numeros.test(password)) {\r\n        newErrors.push(\r\n          'Password deve possuir pelo menos um caracter num√©rico.'\r\n        );\r\n      }\r\n      if (password.length < 8) {\r\n        newErrors.push('Password deve possuir pelo menos 8 caracteres.');\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (newErrors.length === 0) {\r\n      setToken(\r\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBdXRob3IiOiJSb2RyaWdvIiwiWW91SXMiOiJDdXJpb3NvIDpEIn0.xqaWJmsbINRLtFVszfJ-p67imyyoQp8Ez4SOwM8xltk'\r\n      );\r\n\r\n      history.push('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='login'>\r\n      <div className='loginContainer'>\r\n        <div className='imageContainer'>\r\n          <img\r\n            src='https://elogroup.com.br/wp-content/uploads/2020/09/logo-EloGroup-branco.png'\r\n            alt='Elo Group'\r\n          />\r\n        </div>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <label htmlFor='user'>Usu√°rio *</label>\r\n          <input\r\n            value={user}\r\n            onInput={(event) => setUser(event.currentTarget.value)}\r\n            type='text'\r\n            id='user'\r\n          />\r\n          <label htmlFor='password'>Password *</label>\r\n          <input\r\n            value={password}\r\n            onInput={(event) => setPassword(event.currentTarget.value)}\r\n            type='password'\r\n            id='password'\r\n            placeholder='*******'\r\n          />\r\n          <label htmlFor='passwordConfirm'>Confirma√ß√£o Password *</label>\r\n          <input\r\n            value={passwordConfirm}\r\n            onInput={(event) => setPasswordConfirm(event.currentTarget.value)}\r\n            type='password'\r\n            id='passwordConfirm'\r\n            placeholder='*******'\r\n          />\r\n          {errors.map((error) => {\r\n            return (\r\n              <span key={error} className='error'>\r\n                {error}\r\n              </span>\r\n            );\r\n          })}\r\n          <button type='submit'>Registrar</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport RouteWrapper from './Middlewares/RouteWrapper';\r\nimport Leads from './pages/Leads';\r\nimport Login from './pages/Login';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <RouteWrapper\r\n        path='/'\r\n        exact\r\n        component={Leads}\r\n        isPrivate\r\n        redirectTo='/login'\r\n      />\r\n      <RouteWrapper path='/login' component={Login} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\nimport authContext from './Contexts/authContext';\nimport Routes from './routes';\n\nimport './styles/global.css';\n\nfunction App() {\n  const [token, setToken] = useState('');\n\n  return (\n    <authContext.Provider value={[token, setToken]}>\n      <Routes />\n    </authContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}